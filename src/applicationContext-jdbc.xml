<?xml version="1.0" encoding="UTF-8"?>


<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">


	<!--如非必要, 请不要改动这个文件, 扩充spring的配置请新建spring-context-*.xml -->
	<!--此bean告诉Spring去哪找数据库的配置信息,因为有此Bean才出现下面用${}标记来取变量的语句 -->
	<bean id="propertyConfig"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:spring-jdbc.properties</value>
			</list>
		</property>
	</bean>

	<!--配置一个数据源,根据上面propertyConfig指定的location去找数据库连接的配置信息 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName">
			<value>${jdbc.driver}</value>
		</property>
		<property name="url">
			<value>${jdbc.url}</value>
		</property>
		<property name="username">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
		<property name="initialSize" value="5" />
		<property name="maxActive" value="50"></property>
		<property name="maxIdle" value="30"></property>
		<property name="maxWait" value="-1"></property>
	</bean>
	<!-- 
	<bean id="sessionFactroy"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
			</props>
		</property>
		<property name="mappingResources">
			<list>
				<value>com/pro/domain/Users.hbm.xml</value>
			</list>
		</property>
	</bean>
	 -->
	<!-- 
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
		<property name="driverClassName"> <value>${jdbc.driver}</value> </property> 
		<property name="url"> <value>${jdbc.url}</value> </property> <property name="username"> 
		<value>${jdbc.username}</value> </property> <property name="password"> <value>${jdbc.password}</value> 
		</property>
	</bean>
	 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
	</bean>
	<!--根据dataSource和configLocation创建一个SqlMapClient -->



	<!-- <bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean"> 
		<property name="dataSource"> <ref local="dataSource"/> </property> <property 
		name="sqlMapClientProperties"> <props> <prop key="jdbcDriver">${jdbc.driver}</prop> 
		</props> </property> <property name="configLocation"> <value>classpath:SqlMapConfig.xml</value> 
		</property> </bean> -->


	<!--根据sqlMapClien创建一个SqlMapClient模版类 -->
	<!-- <bean id="sqlMapClientTemplate" class="org.springframework.orm.ibatis.SqlMapClientTemplate"> 
		<property name="sqlMapClient"> <ref bean="sqlMapClient"/> </property> </bean> -->

	<!-- <bean id="jdbcTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:advice id="jdbc" transaction-manager="jdbcTransactionManager">
		<tx:attributes>
			<tx:method name="*" read-only="false" propagation="SUPPORTS"/>
		</tx:attributes>
	</tx:advice> -->
</beans>
